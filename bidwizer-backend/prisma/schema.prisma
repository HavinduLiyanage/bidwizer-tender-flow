// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Team {
  id   Int    @id @default(autoincrement())
  name String
  plan String @default("basic") // 'basic' or 'pro'
  users User[]
}

model User {
  id       Int    @id @default(autoincrement())
  name     String
  email    String @unique
  password String
  role     String // "publisher" or "bidder"
  status   String // "active" or "pending"
  position String? // CEO, Manager, etc.
  confirmToken      String?
  confirmTokenExpiry DateTime?
  teamId   Int?
  team     Team?   @relation(fields: [teamId], references: [id])
  bidderProfile    BidderProfile?
  publisherProfile PublisherProfile?
  tenders  Tender[]
}

model BidderProfile {
  id     Int  @id @default(autoincrement())
  user   User @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId Int  @unique
  position String? // CEO, Manager, etc.
  // Add bidder-specific fields here
}

model PublisherProfile {
  id     Int  @id @default(autoincrement())
  user   User @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId Int  @unique
  position String? // CEO, Manager, etc.
  // Add publisher-specific fields here
}

model Tender {
  id                      Int      @id @default(autoincrement())
  publisherId             Int
  title                   String
  description             String?
  deadline                DateTime
  filePath                String?
  advertisementImagePath  String?
  tenderText              String?
  chunkEmbeddings         String? // Added for AI chunk embeddings
  status                  String
  value                   String?
  category                String?
  preBidMeetingDate       DateTime?
  preBidMeetingTime       String?
  region                  String?
  contactPersonName       String?
  contactNumber           String?
  contactEmail            String?
  companyWebsite          String?
  requirements            String?
  publisher               User     @relation(fields: [publisherId], references: [id])
}

model ReferenceEmbedding {
  id         Int    @id @default(autoincrement())
  fileName   String
  chunkIndex Int
  chunkText  String
  embedding  Bytes
}
