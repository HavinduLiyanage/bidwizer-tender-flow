// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  BIDDER
  PUBLISHER
}

enum UserStatus {
  ACTIVE
  INVITED
  SUSPENDED
}

enum PlanType {
  BASIC
  PRO
}

enum DocumentStatus {
  ACTIVE
  ARCHIVED
  DELETED
}

model Company {
  id        Int      @id @default(autoincrement())
  name      String
  plan      PlanType @default(BASIC)
  users     User[]
  documents Document[]
  createdAt DateTime @default(now())
}

model User {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  password  String
  role      UserRole
  status    UserStatus @default(INVITED)
  position  String?   // User's job title or position
  confirmToken String?
  confirmTokenExpiry DateTime?
  companyId Int?     // Only for bidders
  company   Company? @relation(fields: [companyId], references: [id])
  uploadedDocuments Document[] @relation("UserUploadedDocuments")
  publishedTenders Tender[] @relation("UserPublishedTenders")
  createdAt DateTime @default(now())
}

model Document {
  id           Int      @id @default(autoincrement())
  companyId    Int?     // Only for bidders
  company      Company? @relation(fields: [companyId], references: [id])
  uploadedById Int
  uploadedBy   User     @relation("UserUploadedDocuments", fields: [uploadedById], references: [id])
  name         String
  type         String
  category     String?
  description  String?
  uploadDate   DateTime @default(now())
  filePath     String
  status       DocumentStatus @default(ACTIVE)
  tags         String[]
  metadata     Json?
}

model Tender {
  id           Int      @id @default(autoincrement())
  publisherId  Int      // Only for publishers
  publisher    User     @relation("UserPublishedTenders", fields: [publisherId], references: [id])
  title        String
  description  String?
  deadline     DateTime
  filePath     String?
  advertisementImagePath  String?
  tenderText   String?
  chunkEmbeddings String?
  status       String
  value        String?
  category     String?
  preBidMeetingDate DateTime?
  preBidMeetingTime String?
  region       String?
  contactPersonName String?
  contactNumber String?
  contactEmail String?
  companyWebsite String?
  requirements String?
}

model ReferenceEmbedding {
  id         Int    @id @default(autoincrement())
  fileName   String
  chunkIndex Int
  chunkText  String
  embedding  Bytes
}
